---
- name: Copy cidr script to remote
  become: true
  ansible.builtin.template:
    src: get-cidr.sh
    dest: /tmp/get-cidr.sh
    mode: u+rwx,g+rx,o+rx

- name: Get CIDR value
  ansible.builtin.shell: |
    /tmp/get-cidr.sh
  register: r_cidr
  until:
  - r_cidr is not failed
  - r_cidr.stdout | length > 0
  retries: 120
  delay: 10

- name: Set CIDR value
  ansible.builtin.set_fact:
    gitea_customize_cidr: "{{ r_cidr.stdout }}"

- name: Clone leaderboard-gitops
  ansible.builtin.git:
    repo: https://{{ gitea_customize_gitea_admin_user }}:{{ gitea_customize_gitea_admin_password }}@{{
          gitea_customize_gitea_endpoint }}/{{ gitea_customize_gitea_admin_user }}/leaderboard-gitops.git
    dest: /tmp/leaderboard-gitops
    single_branch: yes
    version: main

- name: Fetch values.yaml file from remote host
  run_once: true
  ansible.builtin.fetch:
    src: /tmp/leaderboard-gitops/values.yaml
    dest: /tmp/dest/values.yaml
    flat: true
    fail_on_missing: true

- name: Apply template /tmp/dest/values.yaml
  ansible.builtin.template:
    src: /tmp/dest/values.yaml
    dest: /tmp/leaderboard-gitops/values.yaml

- name: Add new files to the repository
  ansible.builtin.command:
    chdir: >-
      /tmp/leaderboard-gitops
    cmd: "git add ."
  ignore_errors: true

- name: Commit changes to the repository
  ansible.builtin.command:
    chdir: >-
      /tmp/leaderboard-gitops
    cmd: >-
      git commit -a -m 'Updates for starting scenario.'
  ignore_errors: true

- name: Push all changes back to the project repository
  ansible.builtin.command:
    chdir: >-
      /tmp/leaderboard-gitops
    cmd: >-
      git push