---
- name: Create customers gitops repo secret
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
    namespace: "{{ argo_customize_argo_namespace }}"
  vars:
    index: "{{ n | int + 1 }}"
  loop:
  - argocd-project.yml.j2
  - argocd-env-repo.yml.j2
  - argocd-pipeline-repo.yml.j2
  - argocd-customers-repo.yml.j2

- name: Create gitops Applications
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
    namespace: "{{ argo_customize_argo_namespace }}"
  vars:
    index: "{{ n | int + 1 }}"
  loop:
  - argocd-customers-app.yml.j2
  - argocd-env-app.yaml.j2
  - argocd-pipeline-app.yaml.j2

- name: Wait for Application to sync
  k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: "{{ item }}"
    namespace: "{{ argo_customize_argo_namespace }}"
  register: r_application
  retries: 180
  delay: 10
  until:
  - r_application.resources | length > 0
  - r_application.resources[0].status is defined
  - r_application.resources[0].status.sync is defined
  - r_application.resources[0].status.sync.status is defined
  - r_application.resources[0].status.sync.status == 'Synced'
  vars:
    index: "{{ n | int + 1 }}"
  loop:
  - "{{ argo_customize_argo_user_name_base }}{{ index }}-customers-manifests"
  - "{{ argo_customize_argo_user_name_base }}{{ index }}-env-manifests"

- name: Apply pod role & role binding for each user
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
    namespace: customers-{{ argo_customize_argo_user_name_base }}{{ index }}
  loop:
  - pod-role.yml.j2
  - user-pod-rolebinding.yml.j2
  vars:
    index: "{{ n | int + 1 }}"

- name: Run pipeline run
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'pipeline-run.yml.j2') | from_yaml }}"
    namespace: customers-{{ argo_customize_argo_user_name_base }}{{ index }}
  vars:
    index: "{{ n | int + 1 }}"
